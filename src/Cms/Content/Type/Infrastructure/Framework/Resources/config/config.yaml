framework:
    translator:
        paths:
            - '%cms.core_dir%/Cms/Content/Type/Infrastructure/Framework/Resources/translations'
    cache:
        pools:
            cache.content_builder:
                adapter: '%tulia.cache.adapter%'
                provider: '%tulia.cache.provider%'
                default_lifetime: 86400

monolog:
    channels: ['contentBuilder']

cms:
    public_paths:
        - { source: '%cms.core_dir%/Cms/Content/Type/Infrastructure/Framework/Resources/public/layout-builder/dist', target: '/core/content-builder-layout-builder' }
    templating:
        paths:
            - { name: backend/content_builder, path: '%cms.core_dir%/Cms/Content/Type/Infrastructure/Framework/Resources/views/backend' }
    assetter:
        assets:
            content_builder.layout_builder.routable_content_type:
                scripts: [ '/assets/core/content-builder-layout-builder/js/build.js' ]
                styles: [ '/assets/core/content-builder-layout-builder/js/main.css' ]
                require: [ vue, lodash ]
    importer:
        objects:
            ContentTypeEntry:
                importer: 'Tulia\Cms\Content\Type\Infrastructure\Importer\ContentTypeEntryImporter'
                mapping:
                    code:
                        required: true
                    type:
                        required: true
                    name:
                        required: true
                    icon: ~
                    controller: ~
                    is_routable:
                        type: boolean
                        default_value: false
                    is_hierarchical:
                        type: boolean
                        default_value: false
                    routing_strategy: ~
                    field_groups:
                        collection_of: ContentTypeEntryFieldGroup
            ContentTypeEntryFieldGroup:
                type: collection_item
                mapping:
                    code: ~
                    name: ~
                    section: ~
                    fields:
                        collection_of: ContentTypeEntryField
            ContentTypeEntryField:
                type: collection_item
                mapping:
                    code: ~
                    type: ~
                    name: ~
                    is_multilingual:
                        type: boolean
                        required: false
                        default_value: false
                    parent:
                        required: false
                    configuration:
                        type: one_dimension_array
                    children:
                        collection_of: ContentTypeEntryField

    content_building:
        data_types:
            # Declare here Symfony's and Vendor's field types
            # as well as custom ContentBuilder's type.
            mapping:
                text:
                    label: Textline
                    classname: 'Symfony\Component\Form\Extension\Core\Type\TextType'
                    constraints: [required, pattern, length]
                textarea:
                    label: Textarea
                    classname: 'Symfony\Component\Form\Extension\Core\Type\TextareaType'
                    constraints: [required, pattern, length]
                select:
                    label: Select (single)
                    classname: 'Symfony\Component\Form\Extension\Core\Type\ChoiceType'
                    builder: 'Tulia\Cms\Content\Type\Infrastructure\Framework\Form\FormType\ChoiceTypeBuilder'
                    constraints: [required]
                    configuration:
                        choices:
                            required: true
                            type: textarea
                            label: Enter the available choices for this select
                            help_text: "Every entry in new line. Format: \"value: Option label\""
                            placeholder: |
                                value-1: Option label 1
                                value-2: Option label 2
                        placeholder:
                            label: Placeholder text
                            help_text: Shows when no value selected.
                multiselect:
                    label: Multiselect
                    classname: 'Symfony\Component\Form\Extension\Core\Type\ChoiceType'
                    builder: 'Tulia\Cms\Content\Type\Infrastructure\Framework\Form\FormType\MultipleChoiceTypeBuilder'
                    is_multiple: true
                    constraints: [required]
                    configuration:
                        choices:
                            required: true
                            type: textarea
                            label: Enter the available choices for this select
                            help_text: "Every entry in new line. Format: \"value: Option label\""
                            placeholder: |
                                value-1: Option label 1
                                value-2: Option label 2
                        placeholder:
                            label: Placeholder text
                            help_text: Shows when no value selected.
                repeatable:
                    label: Repeatable
                    classname: 'Tulia\Cms\Content\Type\UserInterface\Web\Shared\Form\FormType\RepeatableGroupType'
                email:
                    label: Email
                    classname: 'Symfony\Component\Form\Extension\Core\Type\EmailType'
                    constraints: [required]
                hidden:
                    label: Hidden field
                    classname: 'Symfony\Component\Form\Extension\Core\Type\HiddenType'

        constraint_types:
            mapping:
                required:
                    classname: 'Symfony\Component\Validator\Constraints\NotBlank'
                    label: Required
                    help_text: Makes this field required.
                pattern:
                    classname: 'Symfony\Component\Validator\Constraints\Regex'
                    label: Text pattern
                    help_text: Regular expression pattern.
                    modificators:
                        pattern:
                            type: string
                            label: Regular expression pattern
                length:
                    classname: 'Symfony\Component\Validator\Constraints\Length'
                    label: Text length
                    help_text: Min and max text length.
                    modificators:
                        min:
                            type: integer
                            label: Minimal characters length
                            value: null
                        max:
                            type: integer
                            label: Maximal characters length
                            value: null
                email:
                    classname: 'Symfony\Component\Validator\Constraints\Email'
                    label: E-mail address
