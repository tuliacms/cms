{"version":3,"file":"websites-builder.js","mappings":"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","sources":["webpack://TuliaWebsiteBuilder/./node_modules/vue-loader/dist/exportHelper.js","webpack://TuliaWebsiteBuilder/./src/js/components/ActionForm.vue?b2a1","webpack://TuliaWebsiteBuilder/./src/js/components/ActionForm.vue","webpack://TuliaWebsiteBuilder/./src/js/components/Root.vue","webpack://TuliaWebsiteBuilder/./src/js/components/Root.vue?f8c5","webpack://TuliaWebsiteBuilder/./src/js/components/modals/Modal.vue","webpack://TuliaWebsiteBuilder/./src/js/components/modals/Modal.vue?0766","webpack://TuliaWebsiteBuilder/./src/js/components/modals/NewLocale.vue?3b37","webpack://TuliaWebsiteBuilder/./src/js/components/modals/NewLocale.vue","webpack://TuliaWebsiteBuilder/./src/js/components/modals/NewWebsite.vue?13ff","webpack://TuliaWebsiteBuilder/./src/js/components/modals/NewWebsite.vue","webpack://TuliaWebsiteBuilder/./src/js/shared/FetchAPI.js","webpack://TuliaWebsiteBuilder/external var \"Tulia\"","webpack://TuliaWebsiteBuilder/external var \"Vue\"","webpack://TuliaWebsiteBuilder/external var \"bootstrap\"","webpack://TuliaWebsiteBuilder/webpack/bootstrap","webpack://TuliaWebsiteBuilder/webpack/runtime/define property getters","webpack://TuliaWebsiteBuilder/webpack/runtime/hasOwnProperty shorthand","webpack://TuliaWebsiteBuilder/./src/js/websites-builder.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import script from \"./ActionForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ActionForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <form :action=\"endpoint.url\" method=\"post\" ref=\"form\">\n        <input type=\"hidden\" :value=\"endpoint.csrfToken\" name=\"_token\" />\n        <input v-for=\"(value, name) in fields.list\" type=\"hidden\" :name=\"name\" :value=\"value\" />\n    </form>\n</template>\n\n<script setup>\nconst Tulia = require('Tulia');\nconst { defineProps, defineExpose, ref, reactive } = require('vue');\nconst props = defineProps(['endpoint']);\nconst fields = reactive({\n    list: [],\n});\n\nconst form = ref(null);\nconst submit = (newFields) => {\n    fields.list = newFields;\n    Tulia.PageLoader.show();\n    setTimeout(() => form.value.submit(), 300);\n};\n\ndefineExpose({ submit });\n</script>\n","<template>\n    <div class=\"pane pane-lead\">\n        <div class=\"pane-header\">\n            <div class=\"pane-buttons\">\n                <a href=\"#\" class=\"btn btn-success btn-icon-left\" @click=\"createWebsite\"><i class=\"btn-icon fas fa-plus\"></i> {{ translations.create }}</a>\n            </div>\n            <i class=\"pane-header-icon fas fa-globe\"></i>\n            <h1 class=\"pane-title\">{{ translations.websites }}</h1>\n        </div>\n        <div class=\"pane-body\">\n            <div class=\"alert alert-info\">{{ translations.websitesLongDescription }}</div>\n            <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2 row-cols-xl-3 websites-list\">\n                <div class=\"col mb-4\" v-for=\"website in websites\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <span\n                                v-if=\"website.active === false\"\n                                data-bs-toggle=\"tooltip\"\n                                :title=\"translations.websiteInactiveHint\"\n                                class=\"badge badge-secondary mb-3\"\n                            >{{ translations.websiteInactive }}</span>\n                            <h4 class=\"card-title\">{{ website.name }}</h4>\n                            <small class=\"text-muted\">ID: {{ website.id }}</small>\n                        </div>\n                        <div class=\"list-group list-group-flush\">\n                            <div\n                                v-for=\"locale in website.locales\"\n                                class=\"list-group-item d-flex justify-content-between align-items-center pe-1\"\n                            >\n                                <div>\n                                    <img :src=\"localeProperty(locale.code, 'flag')\" alt=\"\" class=\"website-locale-flag-icon\" />\n                                    <span v-if=\"locale.is_default\">\n                                        <b>{{ localeProperty(locale.code, 'name') }}</b>\n                                    </span>\n                                    <span v-else>\n                                        {{ localeProperty(locale.code, 'name') }}\n                                    </span>\n                                    <small v-if=\"locale.is_default\" class=\"text-lowercase\">&nbsp;({{ translations.defaultLocale }})</small>\n                                </div>\n                                <div>\n                                    <div v-if=\"locale.active\" class=\"form-check form-switch d-inline\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" @change=\"(e) => e.target.setAttribute('disabled', 'disabled') || deactivateLocale(website.id, locale.code)\" :title=\"translations.deactivate\" data-bs-toggle=\"tooltip\" checked>\n                                    </div>\n                                    <div v-if=\"!locale.active\" class=\"form-check form-switch d-inline\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" @change=\"(e) => e.target.setAttribute('disabled', 'disabled') || activateLocale(website.id, locale.code)\" :title=\"translations.activate\" data-bs-toggle=\"tooltip\">\n                                    </div>\n                                    <a v-if=\"!locale.is_default && !locale.is_current\" href=\"#\" @click=\"deleteLocale(website.id, locale.code)\" :title=\"translations.deleteLocale\" data-bs-toggle=\"tooltip\" class=\"btn btn-sm btn-icon-only btn-outline-danger me-2\"><i class=\"btn-icon fa fa-trash\"></i></a>\n                                    <span v-if=\"locale.is_default || locale.is_current\" class=\"d-inline-block\">\n                                        <a href=\"#\" disabled=\"disabled\" class=\"btn btn-sm btn-icon-only btn-outline-danger disabled me-2\"><i class=\"btn-icon fa fa-trash\"></i></a>\n                                    </span>\n                                </div>\n                            </div>\n                            <a\n                                href=\"#\"\n                                class=\"list-group-item list-group-item-with-icon\"\n                                data-bs-toggle=\"tooltip\"\n                                data-bs-placement=\"right\"\n                                :title=\"translations.addLocale\"\n                                @click=\"newLocale(website)\"\n                            >\n                                <i class=\"list-group-item-icon fa fa-plus\"></i>\n                                {{ translations.addLocale }}\n                            </a>\n                        </div>\n                        <div class=\"card-footer d-flex align-items-center pe-1\">\n                            <span class=\"me-2\">{{ translations.activity }}</span>\n                            <div v-if=\"website.active\" class=\"form-check form-switch d-inline\">\n                                <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" @change=\"(e) => e.target.setAttribute('disabled', 'disabled') || deactivateWebsite(website.id)\" :title=\"translations.deactivate\" data-bs-toggle=\"tooltip\" checked>\n                            </div>\n                            <div v-if=\"!website.active\" class=\"form-check form-switch d-inline\">\n                                <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" @change=\"(e) => e.target.setAttribute('disabled', 'disabled') || activateWebsite(website.id)\" :title=\"translations.activate\" data-bs-toggle=\"tooltip\">\n                            </div>\n                            <a v-if=\"!website.is_current\" href=\"#\" @click=\"deleteWebsite(website.id)\" :title=\"translations.deleteWebsite\" data-bs-toggle=\"tooltip\" class=\"btn btn-sm btn-icon-only btn-outline-danger me-2 mx-auto\"><i class=\"btn-icon fa fa-trash\"></i></a>\n                            <span v-if=\"website.is_current\" class=\"d-inline-block me-2 mx-auto\">\n                                <a href=\"#\" disabled=\"disabled\" class=\"btn btn-sm btn-icon-only btn-outline-danger disabled\"><i class=\"btn-icon fa fa-trash\"></i></a>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <NewWebsiteModal\n        :translations=\"translations\"\n        :locales=\"locales\"\n        :endpoint=\"endpoints.newWebsite\"\n        ref=\"newWebsiteModal\"\n    ></NewWebsiteModal>\n    <NewLocaleModal\n        :translations=\"translations\"\n        :locales=\"locales\"\n        :endpoint=\"endpoints.newLocale\"\n        ref=\"newLocaleModal\"\n    ></NewLocaleModal>\n    <ActionForm :endpoint=\"endpoints.activateWebsite\" ref=\"activateWebsiteForm\"></ActionForm>\n    <ActionForm :endpoint=\"endpoints.deactivateWebsite\" ref=\"deactivateWebsiteForm\"></ActionForm>\n    <ActionForm :endpoint=\"endpoints.activateLocale\" ref=\"activateLocaleForm\"></ActionForm>\n    <ActionForm :endpoint=\"endpoints.deactivateLocale\" ref=\"deactivateLocaleForm\"></ActionForm>\n    <ActionForm :endpoint=\"endpoints.deleteWebsite\" ref=\"deleteWebsiteForm\"></ActionForm>\n    <ActionForm :endpoint=\"endpoints.deleteLocale\" ref=\"deleteLocaleForm\"></ActionForm>\n</template>\n\n<script setup>\nconst NewWebsiteModal = require('./modals/NewWebsite.vue').default;\nconst NewLocaleModal = require('./modals/NewLocale.vue').default;\nconst ActionForm = require('./ActionForm.vue').default;\nconst { defineProps, computed, reactive, ref } = require('vue');\nconst Tulia = require('Tulia');\nconst props = defineProps(['websites', 'translations', 'locales', 'endpoints']);\n\nconst newLocaleModal = ref(null);\nconst newWebsiteModal = ref(null);\nconst activateWebsiteForm = ref(null);\nconst deactivateWebsiteForm = ref(null);\nconst deleteWebsiteForm = ref(null);\nconst deleteLocaleForm = ref(null);\nconst activateLocaleForm = ref(null);\nconst deactivateLocaleForm = ref(null);\nconst modals = {\n    newWebsite: {\n        show: () => newWebsiteModal.value.show(),\n    },\n    newLocale: {\n        show: (website) => newLocaleModal.value.show(website),\n    }\n};\n\nconst activateWebsite = (id) => {\n    activateWebsiteForm.value.submit({ id });\n};\nconst deactivateWebsite = (id) => {\n    deactivateWebsiteForm.value.submit({ id });\n};\nconst deactivateLocale = (website, code) => {\n    deactivateLocaleForm.value.submit({ website, code });\n};\nconst activateLocale = (website, code) => {\n    activateLocaleForm.value.submit({ website, code });\n};\nconst deleteLocale = (website, locale) => {\n    Tulia.Confirmation.warning().then((v) => {\n        if (v.value) {\n            deleteLocaleForm.value.submit({ website, locale });\n        }\n    });\n};\nconst createWebsite = () => {\n    modals.newWebsite.show();\n};\nconst deleteWebsite = (id) => {\n    Tulia.Confirmation.warning().then((v) => {\n        if (v.value) {\n            deleteWebsiteForm.value.submit(id);\n        }\n    });\n};\n\nconst newLocale = (website) => {\n    modals.newLocale.show(website);\n};\n\nconst localeProperty = (code, property) => {\n    for (let i = 0; i < props.locales.length; i++) {\n        if (props.locales[i].code === code) {\n            return props.locales[i][property];\n        }\n    }\n\n    return '';\n};\n</script>\n\n<style scoped lang=\"scss\">\n.websites-list {\n    .list-group-item {\n        position: relative;\n        padding-left: 36px;\n\n        .website-locale-flag-icon {\n            position: absolute;\n            left: 11px;\n            top: 50%;\n            transform: translateY(-50%);\n            max-width: 16px;\n        }\n    }\n}\n.form-check-input {\n    height: 1.5em;\n}\n.form-switch {\n    padding-left: 0;\n    margin-right: 10px;\n\n    .form-check-input {\n        width: 3em;\n        margin-left: 0;\n        float: none;\n\n        &:checked {\n            background-color: var(--bs-success);\n        }\n    }\n}\n</style>\n","import script from \"./Root.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Root.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Root.vue?vue&type=style&index=0&id=46b42eca&scoped=true&lang=scss\"\n\nimport exportComponent from \"/home/adam/projects/tuliacms/development/tuliacms/core/src/Cms/Website/Infrastructure/Framework/Resources/public/websites-builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-46b42eca\"]])\n\nexport default __exports__","<template>\n    <Teleport to=\"body\">\n        <div class=\"modal fade\" data-bs-backdrop=\"static\" tabindex=\"-1\" aria-labelledby=\"\" aria-hidden=\"true\" ref=\"modalElement\">\n            <div :class=\"modalClassname\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">{{ title }}</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <slot name=\"body\" />\n                    </div>\n                    <div class=\"modal-footer\">\n                        <slot name=\"footer\"></slot>\n                    </div>\n                    <div class=\"loader\">\n                        <div class=\"load-inner\">\n                            <div class=\"spinner-border\" role=\"status\" style=\"width: 3rem; height: 3rem;\">\n                                <span class=\"visually-hidden\">Loading...</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </Teleport>\n</template>\n\n<style scoped lang=\"scss\">\n.modal-dialog {\n    position: relative;\n    z-index: 1;\n}\n.loader {\n    position: absolute;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(255,255,255,.5);\n    display: none !important;\n\n    .load-inner {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    &:hover {\n        cursor: wait;\n    }\n}\n.modal-loading {\n    .loader {\n        display: block !important;\n    }\n}\n</style>\n\n<script setup>\nconst { onMounted, ref, defineProps, defineExpose, computed } = require('vue');\nconst { Modal } = require('bootstrap');\n\nconst props = defineProps({\n    title: {\n        type: String,\n        default: \"<<Title goes here>>\",\n    },\n    modificators: {\n        type: String,\n        default: 'modal-dialog-centered',\n    },\n});\n\nlet modalElement = ref(null);\nlet thisModalObj = null;\n\nconst modalClassname = computed(() => {\n    return 'modal-dialog ' + props.modificators;\n});\n\nonMounted(() => {\n    thisModalObj = new Modal(modalElement.value);\n});\nfunction show () {\n    thisModalObj.show();\n}\nfunction hide () {\n    thisModalObj.hide();\n}\nfunction showLoader () {\n    modalElement.value.classList.add('modal-loading');\n}\nfunction hideLoader () {\n    modalElement.value.classList.remove('modal-loading');\n}\ndefineExpose({ show, hide, showLoader, hideLoader });\n</script>\n","import script from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Modal.vue?vue&type=style&index=0&id=b738adb4&scoped=true&lang=scss\"\n\nimport exportComponent from \"/home/adam/projects/tuliacms/development/tuliacms/core/src/Cms/Website/Infrastructure/Framework/Resources/public/websites-builder/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b738adb4\"]])\n\nexport default __exports__","import script from \"./NewLocale.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NewLocale.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <Modal :title=\"translations.createWebsite\" ref=\"modalInstance\" modificators=\"modal-lg modal-dialog-centered\">\n            <template #body>\n                <div class=\"row\">\n                    <div class=\"col-6\">\n                        <fieldset class=\"mb-3\">\n                            <label for=\"new-locale-code\" class=\"form-label\">{{ translations.locale }}</label>\n                            <select id=\"new-locale-code\" :class=\"{ 'form-select': 1, 'is-invalid': hasError('code') }\" v-model=\"form.values.code\" @change=\"updateLocalePrefix\">\n                                <option value=\"\">---</option>\n                                <option v-for=\"locale in availableLocales.list\" :value=\"locale.code\">{{ locale.name }} [{{ locale.code }}]</option>\n                            </select>\n                            <div v-if=\"form.errors.code\" class=\"invalid-feedback\">{{ form.errors.code }}</div>\n                        </fieldset>\n                    </div>\n                </div>\n                <div class=\"accordion\" id=\"accordion-new-locale\">\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                                {{ translations.advancedOptions }}\n                            </button>\n                        </h2>\n                        <div id=\"collapseOne\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordion-new-locale\">\n                            <div class=\"accordion-body\">\n                                <div class=\"row\">\n                                    <div class=\"col-6\">\n                                        <fieldset class=\"mb-3\">\n                                            <label for=\"new-locale-backend-prefix\" class=\"form-label\">{{ translations.domain }}</label><br />\n                                            <input type=\"text\" id=\"new-locale-backend-prefix\" :class=\"{ 'form-control mb-1': 1, 'is-invalid': hasError('domain') }\" v-model=\"form.values.domain\" />\n                                            <div v-if=\"form.errors.domain\" class=\"invalid-feedback\">{{ form.errors.domain }}</div>\n                                        </fieldset>\n                                        <fieldset class=\"mb-3\">\n                                            <label for=\"new-locale-domain-development\" class=\"form-label\">{{ translations.domainDevelopment }}</label>\n                                            <input type=\"text\" id=\"new-locale-domain-development\" :class=\"{ 'form-control mb-1': 1, 'is-invalid': hasError('domainDevelopment') }\" v-model=\"form.values.domainDevelopment\" />\n                                            <div v-if=\"form.errors.domainDevelopment\" class=\"invalid-feedback\">{{ form.errors.domainDevelopment }}</div>\n                                            <div class=\"form-text mt-0 help-text\">{{ translations.domainDevelopmentHelp }}</div>\n                                        </fieldset>\n                                    </div>\n                                    <div class=\"col-6\">\n                                        <fieldset class=\"mb-3\">\n                                            <label for=\"new-locale-locale-prefix\" class=\"form-label\">{{ translations.localePrefix }}</label>\n                                            <input type=\"text\" id=\"new-locale-locale-prefix\" :class=\"{ 'form-control mb-1': 1, 'is-invalid': hasError('localePrefix') }\" v-model=\"form.values.localePrefix\" />\n                                            <div v-if=\"form.errors.localePrefix\" class=\"invalid-feedback\">{{ form.errors.localePrefix }}</div>\n                                            <div class=\"form-text mt-0 help-text\" v-html=\"translations.localePrefixHelp\"></div>\n                                        </fieldset>\n                                        <fieldset class=\"mb-3\">\n                                            <label for=\"new-locale-path-prefix\" class=\"form-label\">{{ translations.pathPrefix }}</label>\n                                            <input type=\"text\" id=\"new-locale-path-prefix\" :class=\"{ 'form-control mb-1': 1, 'is-invalid': hasError('pathPrefix') }\" v-model=\"form.values.pathPrefix\" />\n                                            <div v-if=\"form.errors.pathPrefix\" class=\"invalid-feedback\">{{ form.errors.pathPrefix }}</div>\n                                            <div class=\"form-text mt-0 help-text\" v-html=\"translations.pathPrefixHelp\"></div>\n                                        </fieldset>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col\">\n                                        <fieldset class=\"mb-3\">\n                                            <label for=\"new-locale-ssl-mode\" class=\"form-label d-block\">{{ translations.sslMode }}</label>\n                                            <div :class=\"{ 'btn-group mb-1': 1, 'is-invalid': hasError('sslMode') }\" role=\"group\">\n                                                <input type=\"radio\" class=\"btn-check\" name=\"new-locale-ssl-mode\" id=\"new-locale-ssl-force-ssl\" v-model=\"form.values.sslMode\" value=\"FORCE_SSL\" autocomplete=\"off\" checked>\n                                                <label class=\"btn btn-outline-success\" for=\"new-locale-ssl-force-ssl\">{{ translations.forceSSL }}</label>\n                                                <input type=\"radio\" class=\"btn-check\" name=\"new-locale-ssl-mode\" id=\"new-locale-ssl-non-ssl\" v-model=\"form.values.sslMode\" value=\"FORCE_NON_SSL\" autocomplete=\"off\">\n                                                <label class=\"btn btn-outline-secondary\" for=\"new-locale-ssl-non-ssl\">{{ translations.forceNonSSL }}</label>\n                                                <input type=\"radio\" class=\"btn-check\" name=\"new-locale-ssl-mode\" id=\"new-locale-ssl-both\" v-model=\"form.values.sslMode\" value=\"ALLOWED_BOTH\" autocomplete=\"off\">\n                                                <label class=\"btn btn-outline-secondary\" for=\"new-locale-ssl-both\">{{ translations.allowedBothSSL }}</label>\n                                            </div>\n                                            <div v-if=\"form.errors.sslMode\" class=\"invalid-feedback\">{{ form.errors.sslMode }}</div>\n                                            <div class=\"form-text m-0 help-text\">{{ translations.sslModeHelp }}</div>\n                                        </fieldset>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </template>\n            <template #footer>\n                <button class=\"btn btn-secondary btn-icon-left\" @click=\"hide\"><i class=\"btn-icon fa fa-times\"></i> {{ translations.cancel }}</button>\n                <button class=\"btn btn-success btn-icon-left\" @click=\"submit\"><i class=\"btn-icon fa fa-save\"></i> {{ translations.create }}</button>\n            </template>\n        </Modal>\n    </div>\n</template>\n\n<script setup>\nconst FetchAPI = require('./../../shared/FetchAPI.js').default;\nconst { defineProps, ref, defineExpose, reactive, toRaw } = require('vue');\nconst props = defineProps(['translations', 'locales', 'endpoint']);\nconst Modal = require('./Modal.vue').default;\n\nlet website = null;\nlet defaultLocale = null;\nlet availableLocales = reactive({\n    list: [],\n});\nconst modalInstance = ref(null);\n\nconst form = reactive({\n    values: {\n        website: '',\n        code: '',\n        domain: '',\n        domainDevelopment: '',\n        localePrefix: '',\n        pathPrefix: '',\n        sslMode: '',\n    },\n    errors: {\n        code: null,\n        domain: null,\n        domainDevelopment: null,\n        localePrefix: null,\n        pathPrefix: null,\n        sslMode: null,\n    }\n});\n\nconst resetForm = () => {\n    resetFormErrors();\n\n    form.values.website = website.id;\n    form.values.code = '';\n    form.values.domain = defaultLocale.domain;\n    form.values.domainDevelopment = defaultLocale.domain_development;\n    form.values.localePrefix = '';\n    form.values.pathPrefix = defaultLocale.path_prefix;\n    form.values.sslMode = defaultLocale.ssl_mode;\n};\nconst hasError = (field) => {\n    return !!form.errors[field];\n};\n\nfunction resetFormErrors() {\n    for (let i in form.errors) {\n        form.errors[i] = null;\n    }\n}\nfunction fillFormErrors(errors) {\n    for (let i in errors) {\n        form.errors[i] = errors[i][0];\n    }\n}\n\nconst updateLocalePrefix = () => {\n    for (let i in props.locales) {\n        if (props.locales[i].code === form.values.code) {\n            form.values.localePrefix = props.locales[i].path_prefix;\n        }\n    }\n};\n\nconst submit = () => {\n    modalInstance.value.showLoader();\n\n    resetFormErrors();\n\n    FetchAPI.post(props.endpoint, { 'add_locale_form': toRaw(form.values) })\n        .then((data) => {\n            if (data.errors) {\n                modalInstance.value.hideLoader();\n                fillFormErrors(data.errors);\n            } else {\n                document.location.reload();\n            }\n        });\n};\nconst collectAvailableLocales = (currentLocales) => {\n    const allLocales = toRaw(props.locales);\n    availableLocales.list = [];\n\n    for (let j in allLocales) {\n        let found = false;\n\n        for (let i in currentLocales) {\n            if (allLocales[j].code === currentLocales[i].code) {\n                found = true;\n                break;\n            }\n        }\n\n        if (!found) {\n            availableLocales.list.push(allLocales[j]);\n        }\n    }\n};\n\nfunction show (newWebsite) {\n    website = newWebsite;\n\n    for (let i in website.locales) {\n        if (website.locales[i].is_default) {\n            defaultLocale = website.locales[i];\n        }\n    }\n\n    if (!defaultLocale) {\n        throw new Error(`Unable to find default locale for website ${website.id}`);\n    }\n\n    collectAvailableLocales(website.locales);\n    resetForm();\n    modalInstance.value.show();\n}\nfunction hide () {\n    modalInstance.value.hide();\n}\ndefineExpose({ show, hide });\n</script>\n","import script from \"./NewWebsite.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NewWebsite.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <Modal :title=\"translations.createWebsite\" ref=\"modalInstance\" modificators=\"modal-lg modal-dialog-centered\">\n            <template #body>\n                <div class=\"row\">\n                    <div class=\"col-6\">\n                        <fieldset class=\"mb-3\">\n                            <label for=\"new-website-name\" class=\"form-label\">{{ translations.name }}</label>\n                            <input type=\"text\" id=\"new-website-name\" :class=\"{ 'form-control': 1, 'is-invalid': hasError('name') }\" ref=\"newWebsiteName\" v-model=\"form.values.name\" />\n                            <div v-if=\"form.errors.name\" class=\"invalid-feedback\">{{ form.errors.name }}</div>\n                        </fieldset>\n                        <fieldset class=\"mb-3\">\n                            <label for=\"new-website-domain\" class=\"form-label\">{{ translations.domain }}</label>\n                            <input type=\"text\" id=\"new-website-domain\" :class=\"{ 'form-control mb-1': 1, 'is-invalid': hasError('domain') }\" v-model=\"form.values.domain\" />\n                            <div v-if=\"form.errors.domain\" class=\"invalid-feedback\">{{ form.errors.domain }}</div>\n                            <div class=\"form-text mt-0 help-text\">{{ translations.domainHelp }}</div>\n                        </fieldset>\n                    </div>\n                    <div class=\"col-6\">\n                        <fieldset class=\"mb-3\">\n                            <label for=\"new-website-locale\" class=\"form-label\">{{ translations.activity }}</label><br />\n                            <div class=\"btn-group mb-1\" role=\"group\">\n                                <input type=\"radio\" class=\"btn-check\" name=\"new-website-activeness\" id=\"new-website-active\" v-model=\"form.values.activity\" value=\"1\" autocomplete=\"off\" checked>\n                                <label class=\"btn btn-outline-success\" for=\"new-website-active\">{{ translations.active }}</label>\n                                <input type=\"radio\" class=\"btn-check\" name=\"new-website-activeness\" id=\"new-website-inactive\" v-model=\"form.values.activity\" value=\"0\" autocomplete=\"off\">\n                                <label class=\"btn btn-outline-secondary\" for=\"new-website-inactive\">{{ translations.inactive }}</label>\n                            </div>\n                            <div v-if=\"form.errors.activity\" class=\"invalid-feedback\">{{ form.errors.activity }}</div>\n                            <div class=\"form-text mt-0 help-text\" v-if=\"form.values.activity === '0'\">{{ translations.websiteInactiveHint }}</div>\n                        </fieldset>\n                        <fieldset class=\"mb-3\">\n                            <label for=\"new-website-locale\" class=\"form-label\">{{ translations.defaultLocale }}</label>\n                            <select id=\"new-website-locale\" :class=\"{ 'form-select': 1, 'is-invalid': hasError('locale') }\" v-model=\"form.values.locale\">\n                                <option value=\"\">---</option>\n                                <option v-for=\"locale in locales\" :value=\"locale.code\">{{ locale.name }} [{{ locale.code }}]</option>\n                            </select>\n                            <div v-if=\"form.errors.locale\" class=\"invalid-feedback\">{{ form.errors.locale }}</div>\n                            <div class=\"form-text m-0 help-text bg-warning py-2 px-3 text-dark\">{{ translations.defaultLocaleCannotBeChangedAfterCreating }}</div>\n                        </fieldset>\n                    </div>\n                </div>\n                <div class=\"accordion\" id=\"accordion-new-website\">\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                                {{ translations.advancedOptions }}\n                            </button>\n                        </h2>\n                        <div id=\"collapseOne\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordion-new-website\">\n                            <div class=\"accordion-body\">\n                                <div class=\"row\">\n                                    <div class=\"col-6\">\n                                        <fieldset class=\"mb-3\">\n                                            <label for=\"new-website-path-prefix\" class=\"form-label\">{{ translations.pathPrefix }}</label>\n                                            <input type=\"text\" id=\"new-website-path-prefix\" :class=\"{ 'form-control mb-1': 1, 'is-invalid': hasError('pathPrefix') }\" v-model=\"form.values.pathPrefix\" />\n                                            <div v-if=\"form.errors.pathPrefix\" class=\"invalid-feedback\">{{ form.errors.pathPrefix }}</div>\n                                            <div class=\"form-text mt-0 help-text\" v-html=\"translations.pathPrefixHelp\"></div>\n                                        </fieldset>\n                                        <fieldset class=\"mb-3\">\n                                            <label for=\"new-website-domain-development\" class=\"form-label\">{{ translations.domainDevelopment }}</label>\n                                            <input type=\"text\" id=\"new-website-domain-development\" :class=\"{ 'form-control mb-1': 1, 'is-invalid': hasError('domainDevelopment') }\" v-model=\"form.values.domainDevelopment\" />\n                                            <div v-if=\"form.errors.domainDevelopment\" class=\"invalid-feedback\">{{ form.errors.domainDevelopment }}</div>\n                                            <div class=\"form-text mt-0 help-text\">{{ translations.domainDevelopmentHelp }}</div>\n                                        </fieldset>\n                                    </div>\n                                    <div class=\"col-6\">\n                                        <fieldset class=\"mb-3\">\n                                            <label for=\"new-website-backend-prefix\" class=\"form-label\">{{ translations.backendPrefix }}</label><br />\n                                            <input type=\"text\" id=\"new-website-backend-prefix\" :class=\"{ 'form-control mb-1': 1, 'is-invalid': hasError('backendPrefix') }\" v-model=\"form.values.backendPrefix\" />\n                                            <div v-if=\"form.errors.backendPrefix\" class=\"invalid-feedback\">{{ form.errors.backendPrefix }}</div>\n                                            <div class=\"form-text mt-0 help-text\">{{ translations.backendPrefixHelp }}</div>\n                                        </fieldset>\n                                        <fieldset class=\"mb-3\">\n                                            <label for=\"new-website-ssl-mode\" class=\"form-label\">{{ translations.sslMode }}</label>\n                                            <div :class=\"{ 'btn-group mb-1': 1, 'is-invalid': hasError('sslMode') }\" role=\"group\">\n                                                <input type=\"radio\" class=\"btn-check\" name=\"new-website-ssl-mode\" id=\"new-website-ssl-force-ssl\" v-model=\"form.values.sslMode\" value=\"FORCE_SSL\" autocomplete=\"off\" checked>\n                                                <label class=\"btn btn-outline-success\" for=\"new-website-ssl-force-ssl\">{{ translations.forceSSL }}</label>\n                                                <input type=\"radio\" class=\"btn-check\" name=\"new-website-ssl-mode\" id=\"new-website-ssl-non-ssl\" v-model=\"form.values.sslMode\" value=\"FORCE_NON_SSL\" autocomplete=\"off\">\n                                                <label class=\"btn btn-outline-secondary\" for=\"new-website-ssl-non-ssl\">{{ translations.forceNonSSL }}</label>\n                                                <input type=\"radio\" class=\"btn-check\" name=\"new-website-ssl-mode\" id=\"new-website-ssl-both\" v-model=\"form.values.sslMode\" value=\"ALLOWED_BOTH\" autocomplete=\"off\">\n                                                <label class=\"btn btn-outline-secondary\" for=\"new-website-ssl-both\">{{ translations.allowedBothSSL }}</label>\n                                            </div>\n                                            <div v-if=\"form.errors.sslMode\" class=\"invalid-feedback\">{{ form.errors.sslMode }}</div>\n                                            <div class=\"form-text m-0 help-text\">{{ translations.sslModeHelp }}</div>\n                                        </fieldset>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </template>\n            <template #footer>\n                <button class=\"btn btn-secondary btn-icon-left\" @click=\"hide\"><i class=\"btn-icon fa fa-times\"></i> {{ translations.cancel }}</button>\n                <button class=\"btn btn-success btn-icon-left\" @click=\"submit\"><i class=\"btn-icon fa fa-save\"></i> {{ translations.create }}</button>\n            </template>\n        </Modal>\n    </div>\n</template>\n\n<script setup>\nconst FetchAPI = require('./../../shared/FetchAPI.js').default;\nconst { defineProps, ref, defineExpose, reactive, toRaw } = require('vue');\nconst props = defineProps(['translations', 'locales', 'endpoint']);\nconst Modal = require('./Modal.vue').default;\n\nconst newWebsiteName = ref(null);\nconst modalInstance = ref(null);\nconst defaults = {\n    locale: '',\n    activity: '1',\n    name: '',\n    domain: '',\n    pathPrefix: '',\n    domainDevelopment: 'localhost',\n    backendPrefix: '/administrator',\n    sslMode: 'ALLOWED_BOTH',\n};\nconst form = reactive({\n    values: {\n        locale: defaults.locale,\n        activity: defaults.activity,\n        name: defaults.name,\n        domain: defaults.domain,\n        pathPrefix: defaults.pathPrefix,\n        domainDevelopment: defaults.domainDevelopment,\n        backendPrefix: defaults.backendPrefix,\n        sslMode: defaults.sslMode,\n    },\n    errors: {\n        locale: null,\n        activity: null,\n        name: null,\n        domain: null,\n        pathPrefix: null,\n        domainDevelopment: null,\n        backendPrefix: null,\n        sslMode: null,\n    }\n});\n\nconst resetForm = () => {\n    resetFormErrors();\n    form.values.locale = defaults.locale;\n    form.values.activity = defaults.activity;\n    form.values.name = defaults.name;\n    form.values.domain = defaults.domain;\n    form.values.pathPrefix = defaults.pathPrefix;\n    form.values.domainDevelopment = defaults.domainDevelopment;\n    form.values.backendPrefix = defaults.backendPrefix;\n    form.values.sslMode = defaults.sslMode;\n};\nconst hasError = (field) => {\n    return !!form.errors[field];\n};\n\nfunction resetFormErrors() {\n    for (let i in form.errors) {\n        form.errors[i] = null;\n    }\n}\nfunction fillFormErrors(errors) {\n    for (let i in errors) {\n        form.errors[i] = errors[i][0];\n    }\n}\n\nconst submit = () => {\n    modalInstance.value.showLoader();\n\n    resetFormErrors();\n\n    FetchAPI.post(props.endpoint, { 'new_website_form': toRaw(form.values) })\n        .then((data) => {\n            if (data.errors) {\n                modalInstance.value.hideLoader();\n                fillFormErrors(data.errors);\n            } else {\n                document.location.reload();\n            }\n        });\n};\n\nfunction show () {\n    resetForm();\n    modalInstance.value.show();\n    setTimeout(() => newWebsiteName.value.focus(), 500);\n}\nfunction hide () {\n    modalInstance.value.hide();\n}\ndefineExpose({ show, hide });\n</script>\n","export default {\n    post: async function (endpoint, body = {}) {\n        body._token = endpoint.csrfToken;\n\n        const response = await fetch(endpoint.url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n\n        return response.json();\n    }\n}\n","module.exports = Tulia;","module.exports = Vue;","module.exports = bootstrap;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const Root = require('./components/Root.vue').default;\nconst Vue = require('vue');\n\nexport default class {\n    vue;\n\n    constructor (selector, data) {\n        this.vue = Vue.createApp(Root, data);\n        this.vue.mount(selector);\n    }\n}\n"],"names":["exports","sfc","props","target","__vccOpts","key","val","Tulia","defineProps","defineExpose","ref","reactive","fields","list","form","submit","newFields","PageLoader","show","setTimeout","value","NewWebsiteModal","NewLocaleModal","ActionForm","computed","newLocaleModal","newWebsiteModal","activateWebsiteForm","deactivateWebsiteForm","deleteWebsiteForm","deleteLocaleForm","activateLocaleForm","deactivateLocaleForm","modals","website","createWebsite","localeProperty","code","property","i","locales","length","locale","Confirmation","warning","then","v","id","onMounted","Modal","modalElement","thisModalObj","modalClassname","modificators","hide","showLoader","classList","add","hideLoader","remove","FetchAPI","toRaw","defaultLocale","availableLocales","modalInstance","values","domain","domainDevelopment","localePrefix","pathPrefix","sslMode","errors","hasError","field","resetFormErrors","updateLocalePrefix","path_prefix","post","endpoint","data","fillFormErrors","document","location","reload","newWebsite","is_default","Error","currentLocales","allLocales","j","found","push","collectAvailableLocales","domain_development","ssl_mode","newWebsiteName","defaults","activity","name","backendPrefix","focus","async","body","_token","csrfToken","fetch","url","method","headers","JSON","stringify","json","module","Vue","bootstrap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Root","vue","constructor","selector","this","createApp","mount"],"sourceRoot":""}