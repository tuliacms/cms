{"version":3,"file":"backend-theme.bundle.min.js","mappings":";;;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNsC;;AAEtC;;AAEA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;;;;;AAMA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;;;;;;;AAQA;AACA;AACA;AACA,KAAK;AACL;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA,KAAK;AACL;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA,KAAK;AACL;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uFAAuF,SAAS;AAChG;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;;;;;;;;;;AAWA;AACA;;AAEA;AACA;;AAEA,6FAA6F,SAAS,WAAW,aAAa;;AAE9H;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA,oBAAoB;AACpB,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,EAAC","sources":["webpack://Tulia/./src/sass/backend-theme.scss?e7bc","webpack://Tulia/webpack/bootstrap","webpack://Tulia/webpack/runtime/define property getters","webpack://Tulia/webpack/runtime/hasOwnProperty shorthand","webpack://Tulia/webpack/runtime/make namespace object","webpack://Tulia/./src/js/script.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './../sass/backend-theme.scss';\n\nTulia = Tulia ?? {};\n\nTulia.UI = {};\nTulia.UI.init = function () {\n    if ($.fn.datetimepicker) {\n        $.fn.datetimepicker.Constructor.Default = $.extend({}, $.fn.datetimepicker.Constructor.Default, {\n            icons: {\n                time: 'far fa-clock',\n                date: 'far fa-calendar',\n                up: 'far fa-arrow-up',\n                down: 'far fa-arrow-down',\n                previous: 'far fa-chevron-left',\n                next: 'far fa-chevron-right',\n                today: 'far fa-calendar-check-o',\n                clear: 'far fa-trash',\n                close: 'far fa-times'\n            }\n        });\n    }\n\n    if (Tulia.Menu) {\n        let menu = new Tulia.Menu('aside .lead-menu');\n    }\n    if (Tulia.SearchAnything) {\n        let se = new Tulia.SearchAnything('.search-anything-container');\n    }\n    if (Tulia.Toasts) {\n        let toasts = new Tulia.Toasts();\n    }\n\n    Tulia.Form.createForEach('form');\n    Tulia.PageLoader.init();\n\n    if (typeof(SimpleBar) !== 'undefined') {\n        let node = document.getElementById('notifications-scrollarea');\n\n        if (node) {\n            let scrollbar = new SimpleBar(node);\n\n            $('.notifications-list .dropdown').on('shown.bs.dropdown', function () {\n                scrollbar.recalculate();\n            });\n        }\n    }\n\n    $(document).on('click', '.dropdown-prevent-close .dropdown-menu', function (e) {\n        e.stopPropagation();\n    });\n\n    $('.toggle-fullscreen').click(function () {\n        Tulia.Fullscreen.toggle();\n    });\n\n    let body = $('body');\n    let headerScroll = new Tulia.ScrollDecider(3, function () {\n        body.removeClass('header-fixed');\n    }, function () {\n        body.addClass('header-fixed');\n    });\n\n    headerScroll.start();\n\n    $('#mobile-menu-trigger').click(() => {\n        $('body').toggleClass('main-menu-opened');\n    });\n    $('.mobile-menu-content-overlay').click(() => {\n        $('body').removeClass('main-menu-opened');\n    });\n\n    Tulia.UI.refresh(body);\n};\nTulia.UI.refresh = function (container) {\n    if($.fn.chosen) {\n        container\n            .find('select.form-select-custom')\n            .not('.ui-done-select')\n            .addClass('ui-done-select')\n            .chosen({\n                search_contains: true,\n                width: '100%',\n                disable_search_threshold: 6,\n            })\n            .on('ui:update', function () {\n                $(this).trigger('chosen:updated');\n            })\n        ;\n    }\n\n    if(bootstrap.Tooltip) {\n        let tooltipTriggerList = [].slice.call(container.get(0).querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n        let tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n            return new bootstrap.Tooltip(tooltipTriggerEl);\n        });\n    }\n};\n\n\n\n\n\nTulia.PageLoader = {\n    loader: null,\n    init: function () {\n        this.getLoader();\n\n        $('body').on('click', '.tulia-click-page-loader', function () {\n            Tulia.PageLoader.show();\n        });\n    },\n    show: function () {\n        this.getLoader().addClass('active');\n    },\n    hide: function () {\n        this.getLoader().removeClass('active');\n    },\n    getLoader: function () {\n        if(this.loader)\n            return this.loader;\n\n        this.loader = $('<div class=\"page-loader\">Please wait...</div>');\n        this.loader.appendTo('body');\n\n        return this.loader;\n    }\n};\n\n\n\n\n\nTulia.Form = function (form, options) {\n    this.form = form;\n    this.options = options;\n    this.controls = null;\n\n    this.init = function () {\n        if(typeof(this.form) === 'string')\n        {\n            this.form = $(this.form);\n        }\n\n        this.bindEvents();\n        this.bindSubmitters();\n        this.bindLeaveUnsavedNotice();\n    };\n\n    this.bindEvents = function () {\n        let self = this;\n\n        this.form.on('tulia:form:submitted', function () {\n            self.submitted();\n        });\n    };\n\n    this.bindSubmitters = function () {\n        let self = this;\n        let selector = this.getFormId();\n\n        $('[data-submit-form]').each(function () {\n            let btnSelector = $(this).attr('data-submit-form');\n\n            if(btnSelector === selector || btnSelector === '#' + selector)\n            {\n                $(this).click(function (e) {\n                    e.preventDefault();\n                    Tulia.PageLoader.show();\n\n                    // Set timeout (150ms) to wait until browser done page loader animation.\n                    setTimeout(function () {\n                        self.form.trigger('submit');\n                    }, 150);\n                });\n            }\n        });\n    };\n\n    this.bindLeaveUnsavedNotice = function () {\n        let self = this;\n\n        this.controls = this.form.serialize();\n\n        $('body').on('click', 'a', function (e) {\n            let a = $(this);\n\n            if (self.isValidLink(a) && self.isPrevented(a) === false) {\n                if (self.controls === self.form.serialize()) {\n                    return;\n                }\n\n                e.preventDefault();\n\n                Tulia.Confirmation.warning({\n                    title: 'Unsaved form!',\n                    text: 'Do You want cancel form?'\n                }).then(function (result) {\n                    if (result.value) {\n                        document.location.href = a.prop('href');\n                    }\n                });\n            }\n        });\n    };\n\n    this.submitted = function () {\n        this.controls = this.form.serialize();\n    };\n\n    this.isPrevented = function (a) {\n        return a.hasClass('tulia-form-prevent-confirm');\n    };\n\n    this.isValidLink = function (a) {\n        let propHref = a.prop('href');\n        let attrHref = a.attr('href');\n\n        if (! propHref || ! attrHref) {\n            return false;\n        }\n\n        if (attrHref === '#') {\n            return false;\n        }\n\n        if (attrHref.substring(0, 1) === '#') {\n            return false;\n        }\n\n        if (attrHref === 'javascript:;') {\n            return false;\n        }\n\n        return true;\n    };\n\n    this.getFormId = function () {\n        return this.form.attr('id');\n    };\n\n    this.init();\n};\n\nTulia.Form.createForEach = function (selector, options) {\n    $(selector).each(function () {\n        new Tulia.Form($(this), options);\n    });\n};\n\nTulia.Form.defaults = {\n\n};\n\n\n\n\n\nTulia.Info = {\n    fire: function (options) {\n        return Tulia.Info.swal.fire(options);\n    },\n    info: function (options) {\n        if(typeof(options) === 'string')\n        {\n            options = {\n                title: options\n            }\n        }\n\n        options = $.extend(true, {}, {\n            title: 'Operation done',\n            type: 'info',\n            customClass: {\n                confirmButton: 'btn btn-primary'\n            },\n            focusConfirm: false,\n            showCancelButton: false,\n            confirmButtonText: 'Ok',\n        }, options);\n\n        return Tulia.Info.fire(options);\n    },\n    success: function (options) {\n        if(typeof(options) === 'string')\n        {\n            options = {\n                title: options\n            }\n        }\n\n        options = $.extend(true, {}, {\n            title: 'Operation done',\n            type: 'success',\n            customClass: {\n                confirmButton: 'btn btn-success'\n            },\n            focusConfirm: false,\n            showCancelButton: false,\n            confirmButtonText: 'Ok',\n        }, options);\n\n        return Tulia.Info.fire(options);\n    }\n};\n\nTulia.Info.swal = null;\n\n\n\n\n\n\n\nTulia.Confirmation = {\n    fire: function (options) {\n        return Tulia.Confirmation.swal.fire(options);\n    },\n    warning: function (options) {\n        options = $.extend(true, {}, {\n            title: 'Are You sure?',\n            text: 'This operation cannot be undone!',\n            type: 'warning',\n            customClass: {\n                confirmButton: 'btn btn-danger',\n                cancelButton: 'btn btn-secondary',\n            },\n            showCancelButton: true,\n            confirmButtonText: 'Yes',\n            cancelButtonText: 'No',\n        }, options);\n\n        return Tulia.Confirmation.fire(options);\n    },\n    confirm: function (options) {\n        options = $.extend(true, {}, {\n            title: 'Are You sure?',\n            text: 'You really want to do this operation?',\n            type: 'warning',\n            customClass: {\n                confirmButton: 'btn btn-danger',\n                cancelButton: 'btn btn-secondary',\n            },\n            showCancelButton: true,\n            confirmButtonText: 'Yes',\n            cancelButtonText: 'No',\n        }, options);\n\n        return Tulia.Confirmation.fire(options);\n    },\n    critical: function (options) {\n        options = $.extend(true, {}, {\n            title: Tulia.trans('confirmationRequired'),\n            text: Tulia.trans('typeYourPasswordToConfirm'),\n            type: null,\n            customClass: {\n                confirmButton: 'btn btn-danger',\n                cancelButton: 'btn btn-secondary',\n            },\n            showCancelButton: true,\n            confirmButtonText: Tulia.trans('yes'),\n            cancelButtonText: Tulia.trans('no'),\n            input: 'password',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showLoaderOnConfirm: true,\n            preConfirm: (password) => {\n                return fetch(Tulia.Globals.password_protection.endpoint + `?password=${password}`)\n                    .then(response => {\n                        if (!response.ok) {\n                            Swal.showValidationMessage(Tulia.trans('invalidPassword'));\n                            return false;\n                        }\n\n                        return { value: true };\n                    })\n                    .catch(error => Swal.showValidationMessage(Tulia.trans('invalidPassword')))\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n        }, options);\n\n        return Tulia.Confirmation.fire(options);\n    }\n};\n\nTulia.Confirmation.swal = null;\n\n\n\nif (typeof(Swal) !== 'undefined') {\n    Tulia.Info.swal =\n        Tulia.Confirmation.swal = Swal.mixin({\n            customClass: {\n                confirmButton: 'btn btn-danger',\n                cancelButton: 'btn btn-secondary',\n            },\n            buttonsStyling: false\n        });\n}\n\n\n\n\nTulia.ScrollDecider = function (breakpoint, beforeCallback, afterCallback) {\n    this.breakpoint         = breakpoint;\n    this.beforeCallback     = beforeCallback;\n    this.afterCallback      = afterCallback;\n    this.isBeforeBreakpoint = false;\n\n    this.start = function() {\n        var self = this;\n\n        $(window).scroll(function() {\n            self.decide();\n        });\n\n        self.decide();\n    };\n\n    this.decide = function() {\n        if(this.isBeforeBreakpoint)\n        {\n            if($(window).scrollTop() < this.breakpoint)\n            {\n                this.isBeforeBreakpoint = false;\n                this.beforeCallback();\n            }\n        }\n        else\n        {\n            if($(window).scrollTop() > this.breakpoint)\n            {\n                this.isBeforeBreakpoint = true;\n                this.afterCallback();\n            }\n        }\n    };\n};\n\n\n\n\n\n\nTulia.Fullscreen = {\n    status: false,\n    element: document.documentElement,\n    toggle: function () {\n        this.status ? this.off() : this.on();\n    },\n    on: function () {\n        if (this.element.requestFullscreen)\n            this.element.requestFullscreen();\n        else if (this.element.mozRequestFullScreen)\n            this.element.mozRequestFullScreen();\n        else if (this.element.webkitRequestFullscreen)\n            this.element.webkitRequestFullscreen();\n        else if (this.element.msRequestFullscreen)\n            this.element.msRequestFullscreen();\n\n        this.status = true;\n    },\n    off: function () {\n        if (document.exitFullscreen)\n            document.exitFullscreen();\n        else if (document.mozCancelFullScreen)\n            document.mozCancelFullScreen();\n        else if (document.webkitExitFullscreen)\n            document.webkitExitFullscreen();\n        else if (document.msExitFullscreen)\n            document.msExitFullscreen();\n\n        this.status = false;\n    }\n};\n\n\n\n\n\n\n\n\nTulia.Menu = function (selector) {\n    this.selector = selector;\n    this.menu     = null;\n\n    this.init = function () {\n        this.menu = $(this.selector);\n\n        let self = this;\n\n        this.menu.find('li.has-dropdown > a').click(function (e) {\n            if ($(this).next('ul').length) {\n                e.preventDefault();\n                $(this).parent().addClass('animated').toggleClass('dropdown-opened');\n\n                self.updateOpenedDropdownInStorage();\n            }\n        });\n    };\n\n    this.updateOpenedDropdownInStorage = function () {\n        let ids = [];\n\n        this.menu.find('.dropdown-opened').each(function () {\n            if ($(this).find('> ul').length) {\n                ids.push($(this).attr('data-item-id'));\n            }\n        });\n\n        Cookies.set('aside-menuitems-opened', ids.join('|'));\n    };\n\n    this.init();\n};\n\n\n\n\n\n\n\n\n\n\nTulia.Toasts = function () {\n    this.container = null;\n\n    this.init = function () {\n        Tulia.Toasts.instance = this;\n\n        this.container = $('<div aria-live=\"polite\" aria-atomic=\"true\" style=\"position:fixed;top:65px;right:15px;z-index:1000;\"></div>');\n\n        $('body').append(this.container);\n    };\n\n    this.show = function (parameters) {\n        let toast = $(Tulia.Toasts.defaults.template);\n        toast.find('.toast-body').text(parameters.content);\n        toast.find('strong').text(parameters.headline);\n\n        this.container.append(toast);\n        toast.toast({ delay: 3000 }).toast('show');\n    };\n\n    this.init();\n};\n\nTulia.Toasts.defaults = {\n    template: '<div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\\\n      <div class=\"toast-header\">\\\n        <strong class=\"mr-auto\"></strong>\\\n        <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\\\n          <span aria-hidden=\"true\">&times;</span>\\\n        </button>\\\n      </div>\\\n      <div class=\"toast-body\"></div>\\\n    </div>'\n};\n\nTulia.Toasts.instance = null;\n\nTulia.Toasts.success = function (parameters) {\n    if(typeof parameters == 'string')\n    {\n        parameters = {\n            theme: 'success',\n            headline: 'Powodzenie',\n            content: parameters\n        };\n    }\n\n    Tulia.Toasts.instance.show(parameters);\n};\n\nTulia.Toasts.danger = function (parameters) {\n    if(typeof parameters == 'string')\n    {\n        parameters = {\n            theme: 'danger',\n            headline: 'Błąd',\n            content: parameters\n        };\n    }\n\n    Tulia.Toasts.instance.show(parameters);\n};\n\nTulia.Toasts.warning = function (parameters) {\n    if(typeof parameters == 'string')\n    {\n        parameters = {\n            theme: 'warning',\n            headline: 'Uwaga',\n            content: parameters\n        };\n    }\n\n    Tulia.Toasts.instance.show(parameters);\n};\n\nTulia.Toasts.info = function (parameters) {\n    if(typeof parameters == 'string')\n    {\n        parameters = {\n            theme: 'info',\n            headline: 'Informacja',\n            content: parameters\n        };\n    }\n\n    Tulia.Toasts.instance.show(parameters);\n};\n\nTulia.SearchAnything = function (selector, options) {\n    this.selector  = selector;\n    this.options   = options;\n    this.container = null;\n    this.template  = null;\n    this.query     = null;\n    this.loading   = false;\n    this.results   = [];\n    this.debounceSearch = null;\n    this.elm = {\n        query: null,\n        intro: null,\n        noResults: null,\n        results: null\n    };\n\n    this.init = function () {\n        this.container = $(this.selector);\n        this.options   = $.extend({}, Tulia.SearchAnything.defaults, this.options);\n\n        let self = this;\n\n        $(this.options.trigger).click(function () {\n            self.open();\n        });\n\n        $('body').keydown(function (e) {\n            if (self.isOpened() && e.which === 27) {\n                self.close();\n            }\n        });\n\n        this.debounceSearch = _.debounce(self.search, 500);\n\n        this.createView();\n    };\n\n    this.search = function () {\n        let self = this;\n\n        this.results = [];\n        this.elm.searchResults.empty();\n        self.hideIntro();\n        self.hideEmptyResults();\n        self.showLoader();\n\n        $.ajax({\n            url: this.options.endpoint,\n            data: {\n                q: this.query\n            },\n            dataType: 'json',\n            success: function (data) {\n                self.hideLoader();\n\n                if (!data || data.length === 0) {\n                    self.showEmptyResults();\n                    self.hideResults();\n                } else {\n                    self.showResults();\n                    self.render(data);\n                }\n            },\n            error: function () {\n                self.hideLoader();\n                self.showEmptyResults();\n            }\n        });\n    };\n\n    this.render = function (results) {\n        let html = '<div class=\"search-result-group\">' +\n            '<i class=\"section-icon fas fa-search\"></i>' +\n            '   <div class=\"section-hl\">Search results</div>' +\n            '   <div class=\"result-links\">';\n\n        for (let i in results) {\n            let hit = results[i];\n            let tags = '';\n\n            if (hit.tags && hit.tags.length) {\n                tags = '<div class=\"link-tags\">';\n                for (let t in hit.tags) {\n                    tags += '<span class=\"link-tag\"><i class=\"link-tag-icon ' + hit.tags[t].icon + '\"></i> ' + hit.tags[t].tag + '</span>';\n                }\n                tags += '</div>';\n            }\n\n            html += '<a class=\"result-link ' + (hit.image ? 'has-image' : '') + '\" href=\"' + hit.link +'\">' +\n                (hit.image ? '<div class=\"link-image\"><div class=\"link-image-item\" style=\"background-image:url(' + hit.image + ')\"></div></div>' : '') +\n                '    <div class=\"link-details\">' +\n                '        <div class=\"link-head\">' +\n                '            <span class=\"link-label\" title=\"' + hit.title + '\">' +\n                '                ' + hit.title +\n                '            </span>' +\n                '        </div>' +\n                '        <div class=\"link-body\">' +\n                (hit.description ? '<div class=\"link-description\">' + hit.description + '</div>' : '') +\n                '            ' + tags +\n                '        </div>' +\n                '    </div>' +\n                '</a>';\n        }\n\n        html += '</div></div>';\n\n        this.elm.searchResults.html(html);\n    };\n\n    this.resetView = function () {\n        this.elm.intro.removeClass('d-none');\n        this.elm.results.addClass('d-none');\n        this.elm.noResults.addClass('d-none');\n        this.hideLoader();\n    };\n\n    this.hideIntro = function () {\n        this.elm.intro.addClass('d-none');\n    };\n\n    this.showLoader = function () {\n        this.showResults();\n        this.container.find('.tsa-loading-show').removeClass('d-none');\n        this.container.find('.tsa-loading-hide').addClass('d-none');\n        this.elm.searchResults.addClass('d-none');\n        this.elm.searchLoader.removeClass('d-none');\n    };\n\n    this.hideLoader = function () {\n        this.container.find('.tsa-loading-show').addClass('d-none');\n        this.container.find('.tsa-loading-hide').removeClass('d-none');\n        this.elm.searchResults.removeClass('d-none');\n        this.elm.searchLoader.addClass('d-none');\n    };\n\n    this.showEmptyResults = function () {\n        this.elm.noResults.removeClass('d-none');\n    };\n\n    this.hideEmptyResults = function () {\n        this.elm.noResults.addClass('d-none');\n    };\n\n    this.showResults = function () {\n        this.elm.results.removeClass('d-none');\n    };\n\n    this.hideResults = function () {\n        this.elm.results.addClass('d-none');\n    };\n\n    this.createView = function () {\n        let self = this;\n\n        this.elm.query   = this.container.find('.query');\n        this.elm.queryPreview = this.container.find('.tsa-query-preview');\n        this.elm.intro   = this.container.find('.search-info');\n        this.elm.results = this.container.find('.search-results-wrapper');\n        this.elm.noResults = this.container.find('.search-no-results-wrapper');\n        this.elm.searchResults = this.container.find('.search-results');\n        this.elm.searchLoader  = this.container.find('.search-loader');\n\n        this.container.find('.closer').click(function () {\n            self.close();\n        });\n        this.elm.query.on('change keydown keyup', function () {\n            let query = $(this).val();\n\n            if (self.query === query) {\n                return;\n            }\n\n            self.query = query;\n\n            self.elm.queryPreview.text(query);\n            self.results = [];\n\n            if (query) {\n                self.hideIntro();\n                self.hideEmptyResults();\n                self.showLoader();\n                self.debounceSearch();\n            } else {\n                self.resetView();\n                self.debounceSearch.cancel();\n            }\n        });\n    };\n\n    this.isOpened = function () {\n        return this.container.hasClass('opened');\n    };\n\n    this.open = function () {\n        this.resetView();\n        $('body').addClass('prevent-scroll');\n        this.container.addClass('opened');\n        this.container.find('.query')\n            .val('')\n            .trigger('change')\n            .focus();\n    };\n\n    this.close = function () {\n        this.results = [];\n        this.container.removeClass('opened');\n        this.debounceSearch.cancel();\n        $('body').removeClass('prevent-scroll');\n    };\n\n    this.init();\n};\n\nTulia.SearchAnything.defaults = {\n    trigger: '.search-area',\n    endpoint: Tulia.Globals && Tulia.Globals.search_anything && Tulia.Globals.search_anything.endpoint ? Tulia.Globals.search_anything.endpoint : null\n};\n\n\n\nTulia.Translator = {\n    translations: {},\n    register: function (locale, domain = 'messages', messages = {}) {\n        Tulia.Translator.translations[locale] = {};\n        Tulia.Translator.translations[locale][domain] = messages;\n    }\n};\nTulia.trans = function (name, domain = 'messages') {\n    return Tulia.Translator.translations[Tulia.Globals.user.locale][domain][name] ?? name;\n};\n\nexport default Tulia;\n"],"names":[],"sourceRoot":""}