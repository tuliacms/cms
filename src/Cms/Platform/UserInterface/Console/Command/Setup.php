<?php

declare(strict_types=1);

namespace Tulia\Cms\Platform\UserInterface\Console\Command;

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Tulia\Cms\Shared\Infrastructure\Utils\Uuid\UuidGeneratorInterface;

/**
 * @author Adam Banaszkiewicz
 */
class Setup extends Command
{
    private string $rootDir;
    private UuidGeneratorInterface $uuidGenerator;

    public function __construct(string $rootDir, UuidGeneratorInterface $uuidGenerator)
    {
        parent::__construct();
        $this->rootDir = $rootDir;
        $this->uuidGenerator = $uuidGenerator;
    }

    protected function configure()
    {
        $this
            ->setName('setup')
            ->setDescription('Setups the new project.')
        ;
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $output->writeln(<<<EOF

████████╗██╗   ██╗██╗     ██╗ █████╗      ██████╗███╗   ███╗███████╗
╚══██╔══╝██║   ██║██║     ██║██╔══██╗    ██╔════╝████╗ ████║██╔════╝
   ██║   ██║   ██║██║     ██║███████║    ██║     ██╔████╔██║███████╗
   ██║   ██║   ██║██║     ██║██╔══██║    ██║     ██║╚██╔╝██║╚════██║
   ██║   ╚██████╔╝███████╗██║██║  ██║    ╚██████╗██║ ╚═╝ ██║███████║
   ╚═╝    ╚═════╝ ╚══════╝╚═╝╚═╝  ╚═╝     ╚═════╝╚═╝     ╚═╝╚══════╝

              Welcome in the World of Tulia CMS!

EOF
);

        if (!($_ENV['APP_SECRET'] ?? null)) {
            $secret = $this->uuidGenerator->generate();
            $this->appendToDotenv('APP_SECRET', $secret);

            $output->writeln(sprintf('<info>Autogenerated APP_SECRET is %s.</info>', $secret));
        }

        return Command::SUCCESS;
    }

    private function appendToDotenv(string $variable, string $value): void
    {
        $lines = file($this->rootDir.'/.env');
        $found = false;

        foreach ($lines as $no => $line) {
            if (strpos($line, "$variable=") === 0) {
                $lines[$no] = "$variable=$value\n";
                $found = true;
            }
        }

        if ($found === false) {
            $lines[] = "$variable=$value\n";
        }

        file_put_contents($this->rootDir.'/.env', implode('', $lines));
    }
}
